@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.CVListsViewModel
@{
    ViewData["Title"] = "Community Volunteer Validation";
    var tasks = User.FindFirst("UserRoles").Value;
}
@section buttons
    {
    @if (tasks.Contains("Generate CHV Validation List"))
    {
        <a class="btn btn-primary lnk-modal" asp-action="create">Generate CHV Validation List</a>

    }

}
<form asp-action="Lists" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group col-md-2">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list1" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control"  asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control filter-list1" asp-items="ViewBag.StatusId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="col-md-2 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
</form>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                HHs Generated
            </th>

            <th>
                HHs Validated
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.HealthFacility.SubCountyId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.HealthFacilityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.CreatedById)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.DateApproved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.ApprovedById)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.ApprovalNotes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.List.Status)
            </th>
            @if (tasks.Contains("Assign CHVs"))
            {
                <th class="fit">Assign CHVs</th>
            }
            <th class="fit">View</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Lists)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Households)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Captured)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HealthFacility.SubCounty.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HealthFacility.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedBy.DisplayName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateApproved)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApprovedBy.DisplayName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ApprovalNotes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
                @if (tasks.Contains("Assign CHVs"))
                {
                    <td class="text-center">
                        <a asp-action="Assign" class="fa fa-pencil" asp-option-id="1" asp-route-id="@item.Id"></a>
                    </td>
                }
                <td class="fit">
                    <a asp-action="Details" class="fa fa-eye" asp-route-id="@item.Id"></a>
                </td>
            </tr>
        }
        @if (!Model.Lists.Any())
        {
            <tr>
                <td colspan="15">
                    No data found.
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(Model.Lists, page => Url.Action("Index", new { page }))
<a asp-action="Index" class="btn btn-danger glyphicon glyphicon-step-backward pull-left"> Back</a>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                scope.SubCountyId ='@Model.SubCountyId';
                setTimeout(function() {
                    $('#WardId').val('@Model.WardId');
                },100);

            });

            $(".checkbox").each(function () {
                if ($(this).prop("checked") === false) {

                } else {

                }
            });
        });
    </script>
}