@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.CommunityValidationListViewModel
@{ ViewData["Title"] = "Community Validation";
                var tasks = User.FindFirst("UserRoles").Value; }
@section buttons
{
    @if (Model.CVList.ListTypeId == 211 || Model.CVList.ListTypeId == 357)
    {
@if (Model.CVList.StatusId == 1 && tasks.Contains("Generate CHV Validation List"))
{
<a class="btn btn-primary modal-link" asp-action="SendForApproval" asp-route-id="@Model.Id">
    <span><i class="glyphicon glyphicon-ok-sign"></i> Send for Approval</span>
</a> }
                    else if (Model.CVList.StatusId == 2 && tasks.Contains("Approve CHV Lists"))
                    {
<a class="btn btn-primary modal-link" asp-action="Action" asp-route-id="@Model.Id">
    <span><i class="glyphicon glyphicon-ok-sign"></i> Approvals</span>
</a>}
                    <a class="btn btn-primary" asp-action="Export" asp-route-id="@Model.Id">
                        <span><i class="fa fa-file-pdf-o"></i> Download</span>
                    </a> }
                                    else
                                    {

                    @if (Model.CVList.StatusId == 1 && tasks.Contains("Generate M&E Validation Lists"))
                    {
<a class="btn btn-primary modal-link" asp-action="SendForApproval" asp-route-id="@Model.Id">
    <span><i class="glyphicon glyphicon-ok-sign"></i> Send for Approval</span>
</a> }
                    else if (Model.CVList.StatusId == 2 && tasks.Contains("Approve M&E Validation Lists"))
                    {
<a class="btn btn-primary modal-link" asp-action="Action" asp-route-id="@Model.Id">
    <span><i class="glyphicon glyphicon-ok-sign"></i> Approvals</span>
</a>}
                                        <a class="btn btn-primary" asp-action="Export" asp-route-id="@Model.Id">
                                            <span><i class="fa fa-file-pdf-o"></i> Download</span>
                                        </a>}
}
<form asp-action="Details" class="form-paginated">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group col-md-2">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
        <span asp-validation-for="UniqueId" class="text-danger"></span>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
        <span asp-validation-for="IdNumber" class="text-danger"></span>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
        <span asp-validation-for="HealthFacilityId" class="text-danger"></span>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
        <span asp-validation-for="SubCountyId" class="text-danger"></span>
    </div>
    <div class="col-md-2 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>
    <div class="clearfix"></div>
    <div class="form-group col-md-2">
        <label asp-for="EnumeratorId" class="control-label"></label>
        <select asp-for="EnumeratorId" class="form-control filter-list" asp-items="ViewBag.EnumeratorId">
            <option value="">Select</option>
        </select>
    </div>

    <div class="form-group col-md-2">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="col-md-2">
        <label asp-for="StartDate" class="control-label"></label>
        <div class='input-group date'>

            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="col-md-2">
        <label asp-for="EndDate" class="control-label"></label>
        <div class='input-group date'>
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="col-md-2 form-group">
        <label asp-for="PageSize" class="control-label"></label>
        <select asp-for="PageSize" class="form-control filterSL" asp-items="ViewBag.PageSize">
        </select>
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
</form>
<hr />
<div class="scrollable">
    <table class="table table-striped table-striped-header-only table-bordered">
        <thead>
            <tr>
                <th>Unique ID</th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.MiddleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommonName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.IdNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.HealthFacilityId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Phone)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.WardId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommunityArea.Name)
                </th>
                @if (tasks.Contains("View PMT score"))
                {
    <th>
        @Html.DisplayNameFor(model => model.Household.PMTScore)
    </th> if (Model.CVList.ListTypeId == 211)
                    {
    <th>
        CV PMT Score
    </th>
                        <th class="text-center">
                            Variance (%)
                        </th> }
                                        else
                                        {
                        <th>
                            M&E PMT Score
                        </th>                }

                                    }
                <th>
                    @Html.DisplayNameFor(model => model.Household.Notes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EnumeratorId)
                </th>
                <th>
                    Interview Result
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Status)
                </th>
                <th>
                    Actioned By
                </th>
                @*<th>Capture</th>*@
                @if (tasks.Contains("Review Captured Data"))
                {
    <th>View</th>            }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details)
            {
<tr class="@Html.DisplayFor(modelItem => item.VarianceCategory.Code)">
    <td>
        @Html.DisplayFor(modelItem => item.Household.UniqueId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.Mother.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.Mother.MiddleName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.Mother.Surname)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.CommonName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.Mother.IdNumber)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.HealthFacility.Name)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.Household.Phone)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.Household.Village.Ward.SubCounty.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.Village.Ward.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.Village.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Household.CommunityArea.Name)
    </td>
    @if (tasks.Contains("View PMT score"))
    {
<td>
    @*@Html.DisplayFor(modelItem => item.Household.PMTScore)*@

    @item.Household.PMTScore
</td>

                    <td>
                        @*@Html.DisplayFor(modelItem => item.CVHouseHold.PMTScore)*@
                        @if (item.CVHouseHold != null)
                        {
    <span>@item.CVHouseHold.PMTScore</span>}
                    </td>
                                        @if (Model.CVList.ListTypeId == 211)
                                        {
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Variance)
                    </td>                    }                }
    <td>
        @Html.DisplayFor(modelItem => item.Household.Notes)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Enumerator.FullName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.InterviewResult.Code)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Status.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ActionedBy.DisplayName)
    </td>
    @*<td class="fit text-center">
            @if ((item.StatusId == 1 || item.StatusId == 9) && Model.CVList.StatusId == 3)
            {
                <a asp-action="Dwelling" class="fa fa-pencil" asp-route-id="@item.Id"></a>
            }
        </td>*@
    @if (tasks.Contains("Review Captured Data"))
    {
<td class="fit text-center">
    @if (item.StatusId != 1 && item.StatusId != 9)
    {
<a asp-action="Captured" class="fa fa-eye" asp-route-id="@item.Id"></a>}
</td>                }
</tr>}
            @if (!Model.Details.Any())
            {
<tr>
    <td colspan="15" class="dataTables_empty">No Data found</td>
</tr>}
        </tbody>
    </table>
</div>
<div class="row">
    <div class="col-md-12">
        Page @(Model.Details.PageCount < Model.Details.PageNumber ? 0 : Model.Details.PageNumber) of @Model.Details.PageCount, Showing @(((Model.Details.PageNumber-1)* Model.Details.PageSize) + @Model.Details.Count) of @Model.Details.TotalItemCount
        @Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page = page }))
    </div>
</div>
<a asp-action="Index" class="btn btn-default glyphicon glyphicon-step-backward"> Back</a>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                scope.SubCountyId ='@Model.SubCountyId';
                scope.WardId = '@Model.WardId';
            });
        });
    </script>
}