@model MCHMIS.ViewModels.HouseholdDetailsViewModel

@{
    ViewData["Title"] = "Household Details";
    var count = 1;
    var tasks = User.FindFirst("UserRoles").Value;
}

@section buttons
    {
    @if (tasks.Contains("Compare Captured Data"))
    {
        <a class="btn btn-primary" asp-action="Compare" asp-route-id="@Model.Id">Compare Data</a>

    }

}
<h2 class="lbl-title">MOTHER'S DETAILS</h2>

<table class="table table-striped table-bordered">

    <tr>
        <td rowspan="7" width="120" class="text-center" valign="middle">
            <div class="row">
                <div class="col-md-12">
                    <img width="100" src="~/images/user.png" />
                </div>
                <div class="col-md-12 padding-top-10">
                    <span class="text-center">@Model.ParentHousehold.Status.Name</span>
                </div>
            </div>
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.FirstName):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.FirstName)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.MiddleName):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.MiddleName)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.Surname):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.Surname)
        </td>
    </tr>
    <tr>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.IdentificationFormId):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.IdentificationForm.Code)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.IdNumber):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.IdNumber)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.DOB):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.DOB)
        </td>
    </tr>
    <tr>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Mother.MaritalStatusId):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Mother.MaritalStatus.Code)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.Phone):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.Phone)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.ParentHousehold.HealthFacilityId):</strong>
            @Html.DisplayFor(model => model.ParentHousehold.HealthFacility.Name)
        </td>
    </tr>

    <tr>

        <td>
            <strong>Disabilities:</strong>
            @{ var disabilities = "";}
            @foreach (var item in Model.Disabilities)
            {
                disabilities += item.Disability.Code + ",";
            }
            @if (disabilities.Length > 1)
            {
                <span>@disabilities.Substring(0, disabilities.Length - 1)</span>
            }
            else
            {
                <span>None</span>
            }
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Detail.InterviewStatusId):</strong>
            @Html.DisplayFor(model => model.Detail.InterviewStatus.Code)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Detail.InterviewResultId):</strong>
            @Html.DisplayFor(model => model.Detail.InterviewResult.Code)
            @if (Model.Detail.CannotFindHouseholdReason != null)
            {
                <br/>
                <strong>@Html.DisplayNameFor(model => model.Detail.CannotFindHouseholdReasonId):</strong>
                @Html.DisplayFor(model => model.Detail.CannotFindHouseholdReason.Code)
            }


        </td>
    </tr>
</table>
<hr />
<hr />
<h2 class="lbl-title">GEOGRAPHIC IDENTIFICATION</h2>
<table class="table table-bordered table-striped">
    <tr>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.Village.Ward.SubCounty.County):</strong>
            @Html.DisplayFor(model => model.Household.Village.Ward.SubCounty.County.Name)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.Village.Ward.SubCounty):</strong>
            @Html.DisplayFor(model => model.Household.Village.Ward.SubCounty.Name)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.Village.Ward):</strong>
            @Html.DisplayFor(model => model.Household.Village.Ward.Name)
        </td>
    </tr>
    <tr>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.SubLocation.Location):</strong>
            @Html.DisplayFor(model => model.Household.SubLocation.Location.Name)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.SubLocation):</strong>
            @Html.DisplayFor(model => model.Household.SubLocation.Name)
        </td>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.Village.Name):</strong>
            @Html.DisplayFor(model => model.Household.Village.Name)
        </td>
    </tr>
    <tr>
        <td>
            <strong>@Html.DisplayNameFor(model => model.Household.PhysicalAddress):</strong>
            @Html.DisplayFor(model => model.Household.PhysicalAddress)
        </td>
        <td>
            <strong>Duration of residence in this place:</strong>
            @Html.DisplayFor(model => model.Household.ResidenceDurationYears) Years,
            @Html.DisplayFor(model => model.Household.ResidenceDurationMonths) Months
        </td>
        <td>
            <div class="row">
                <div class="col-md-6">
                    <strong>@Html.DisplayNameFor(model => model.Household.NearestReligiousBuilding):</strong>
                    @Html.DisplayFor(model => model.Household.NearestReligiousBuilding)
                </div>
                <div class="col-md-6">
                    <strong>@Html.DisplayNameFor(model => model.Household.NearestSchool):</strong>
                    @Html.DisplayFor(model => model.Household.NearestSchool)
                </div>
            </div>
        </td>
    </tr>
</table>

<hr />

<h2 class="lbl-title">DWELLING AND HOUSEHOLD</h2>
@if (Model.Characteristic != null)
{
    <table id="dwelling-xtics-table" class="table table-bordered table-striped">
        <tr>
            <td width="33%">
                <strong>@Html.DisplayNameFor(model => model.Characteristic.HabitableRoomsNo):</strong>
                @Html.DisplayFor(model => model.Characteristic.HabitableRoomsNo)
            </td>
            <td width="33%">
                <strong>@Html.DisplayNameFor(model => model.Characteristic.CookingFuelSourceId):</strong>
                @Html.DisplayFor(model => model.Characteristic.CookingFuelSource.Code)
                @((Model.Characteristic != null && string.IsNullOrEmpty(Model.Characteristic.CookingFuelSourceOther)) ? "" : " - " + Model.Characteristic.CookingFuelSourceOther)
            </td>
            <td width="33%">
                <strong>@Html.DisplayNameFor(model => model.Characteristic.HouseholdConditionId):</strong>
                @Html.DisplayFor(model => model.Characteristic.HouseholdCondition.Code)
            </td>
        </tr>
        <tr>
            <td>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.TenureStatusId):</strong>
                @Html.DisplayFor(model => model.Characteristic.TenureStatus.Code)
                @(string.IsNullOrEmpty(Model.Characteristic.TenureStatusOther) ? "" : " - " + Model.Characteristic.TenureStatusOther)
            </td>
            <td>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.LightingSourceId):</strong>
                @Html.DisplayFor(model => model.Characteristic.LightingSource.Code)
                @(string.IsNullOrEmpty(Model.Characteristic.LightingSourceOther) ? "" : " - " + Model.Characteristic.LightingSourceOther)
            </td>
            <td>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.HasSkippedMealId):</strong>
                @Html.DisplayFor(model => model.Characteristic.HasSkippedMeal.Code)
            </td>
        </tr>
        <tr>
            <td>
                <strong>Dominant Construction Material of the main dwelling unit</strong>
                <table class="table">
                    <tr>
                        <td>
                            <strong>@Html.DisplayNameFor(model => model.Characteristic.RoofMaterialId):</strong>
                            @Html.DisplayFor(model => model.Characteristic.RoofMaterial.Code)
                        </td>
                        <td>
                            <strong>@Html.DisplayNameFor(model => model.Characteristic.WallMaterialId):</strong>
                            @Html.DisplayFor(model => model.Characteristic.WallMaterial.Code)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>@Html.DisplayNameFor(model => model.Characteristic.FloorMaterialId):</strong>
                            @Html.DisplayFor(model => model.Characteristic.FloorMaterial.Code)
                        </td>
                        <td>
                            <strong>@Html.DisplayNameFor(model => model.Characteristic.UnitRiskId):</strong>
                            @Html.DisplayFor(model => model.Characteristic.UnitRisk.Code)
                        </td>
                    </tr>
                </table>
            </td>
            <td>
                <strong>Does the household OWN any of the following items?</strong>
                <table class="table">
                    <tr>
                        @{ count = 1; }
                        @foreach (var item in Model.Assets.Where(i => i.AssetTypeId == 203))
                        {
                            <td>
                                <strong>@item.Asset.Code:</strong>
                                <span>@(item.HasItem == true ? "Yes" : "No")</span>
                            </td>
                            if (count != 0 && count % 2 == 0)
                            {
                                @Html.Raw("</tr><tr>")
                                ;
                            }
                            count++;
                        }
                        <td></td>
                    </tr>
                </table>
            </td>
            <td>

                <strong>BENEFITS FROM SOCIAL ASSISTANCE PROGRAMMES</strong><br />
                <strong>@Html.DisplayNameFor(model => model.OtherProgrammes):</strong>
                @if (!Model.OtherProgrammes.Any())
                {
                    <span>No</span>
                }
                else
                {
                    <ol>

                        @foreach (var item in Model.OtherProgrammes)
                        {
                            <li>
                                <strong>@item.OtherProgramme.Code:</strong>
                            </li>

                        }
                    </ol>
                }
            </td>
        </tr>
        <tr>
            <td>

                <strong>@Html.DisplayNameFor(model => model.Characteristic.WaterSourceId):</strong>
                @Html.DisplayFor(model => model.Characteristic.WaterSource.Code)
                <div class="separator"></div>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.ToiletTypeId):</strong>
                @Html.DisplayFor(model => model.Characteristic.ToiletType.Code)

                <div class="separator"></div>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.LiveBirths):</strong>
                @Html.DisplayFor(model => model.Characteristic.LiveBirths)
                <div class="separator"></div>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.Deaths):</strong>
                @Html.DisplayFor(model => model.Characteristic.Deaths)
            </td>
            <td>
                <strong>Livestock are currently owned by the household</strong>
                <table class="table">
                    <tr>
                        @{ count = 1; }
                        @foreach (var item in Model.Assets.Where(i => i.AssetTypeId == 204))
                        {
                            <td>
                                <strong>@item.Asset.Code:</strong>
                                <span>@item.ItemCount</span>
                            </td>
                            if (count != 0 && count % 2 == 0)
                            {
                                @Html.Raw("</tr><tr>")
                                ;
                            }
                            count++;
                        }
                    </tr>
                </table>
            </td>
            <td>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.IsReceivingOtherBenefitId):</strong>
                @Html.DisplayFor(model => model.Characteristic.IsReceivingOtherBenefit.Code)
                @if (Model.Characteristic.IsReceivingOtherBenefit.Code.Equals("Yes"))
                {
                    <div class="separator"></div>
                    <strong>@Html.DisplayNameFor(model => model.Characteristic.OtherProgrammes):</strong>
                    @Html.DisplayFor(model => model.Characteristic.OtherProgrammes)

                    <div class="separator"></div>

                    <strong>@Html.DisplayNameFor(model => model.Characteristic.OtherProgrammesBenefitTypeId):</strong>
                    @Html.DisplayFor(model => model.Characteristic.OtherProgrammesBenefitType.Code)

                }
                <div class="separator"></div>
                <strong>@Html.DisplayNameFor(model => model.Characteristic.BenefitFromFriendsRelativeId):</strong>
                @Html.DisplayFor(model => model.Characteristic.BenefitFromFriendsRelative.Code)
            </td>
        </tr>
    </table>

}
else
{
    <table id="dwelling-xtics-table" class="table table-bordered table-striped">
        <tr>
            <td class="dataTables_empty">No data found.</td>
        </tr>
    </table>
}

<hr />
<h2 class="lbl-title">HOUSEHOLD MEMBERS</h2>
<hr />

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Member.Relationship)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.MiddleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.DOB)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Member.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.MaritalStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.IdentificationFormId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member.IdNumber)
            </th>
            <th>View</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Members)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Relationship.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MiddleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaritalStatus.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdentificationForm.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdNumber)
                </td>
                <td class="fit">
                    <a asp-action="MemberDetails" asp-controller="Registration" class="fa fa-eye lnk-modal" asp-route-id="@item.Id"></a>
                </td>
            </tr>
        }
        @if (!Model.Members.Any())
        {
            <tr>
                <td class="dataTables_empty" colspan="10">No data found</td>
            </tr>
        }
    </tbody>
</table>

@if (Model.StatusId == 3) // Awaiting Approval
{
    <div class="row">
        <div class="col-md-12"> <hr /></div>

        <div class="action-cont col-md-6 pull-right">
            <form asp-action="Approve" class="margin-bottom-10">
                <input type="hidden" asp-for="Id" class="form-control" />
                <div class="form-group col-md-12 verify-health">

                    <input type="checkbox" asp-for="RequiresHealthVerification" class="required" />
                    <label class="control-label" style="margin-top: 2px !important">I have verified the information captured by the CHV and it looks authentic.</label>
                    <div class="clearfix"></div>
                    <span asp-validation-for="RequiresHealthVerification" class="text-danger"></span>
                </div>
                <div class="form-group col-md-12">

                    <label asp-for="Notes" class="control-label"></label>
                    <input asp-for="Notes" class="form-control" />
                    <span class="field-validation-valid notes-error text-danger">*This field is required.</span>
                </div>
                <div class="form-group col-md-12">
                    <a asp-action="Index" class="btn btn-danger glyphicon glyphicon-step-backward pull-left"> Back</a>
                    <button type="submit" class="btn btn-success pull-right btn-approve-status">
                        <i class="glyphicon glyphicon-ok-sign"></i> Accept
                    </button>
                    <button type="submit" class="btn btn-danger pull-right btn-reject-status margin-right-15">
                        <i class="glyphicon glyphicon-remove"></i> Reject
                    </button>
                    <input type="hidden" name="StatusId" id="action" />
                </div>
            </form>
        </div>
    </div>

}
else
{
    <a asp-action="Index" class="btn btn-danger glyphicon glyphicon-step-backward pull-left"> Back</a>
}