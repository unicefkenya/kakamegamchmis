@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.CommunityValidationListViewModel
@{
    ViewData["Title"] = "Community Validation";
    var tasks = User.FindFirst("UserRoles").Value;
}
@section buttons
    {
    @if (tasks.Contains("Generate CHV Top-ups"))
    {
        <a class="btn btn-primary lnk-modal" asp-action="topups">Generate Top-ups</a>
    }
    @if (tasks.Contains("Generate CHV Validation Lists"))
    {
        <a class="btn btn-primary lnk-modal" asp-action="create">Generate CHV Validation List</a>
    }

    @if (tasks.Contains("View CHV Lists"))
    {
        <a class="btn btn-primary" asp-action="Lists">View CHV Validation Lists</a>
    }

}
<form asp-action="Index" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group col-md-2">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">Select</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="SelectedEnumeratorId" class="control-label"></label>
        <select asp-for="SelectedEnumeratorId" class="form-control filter-list" asp-items="ViewBag.EnumeratorId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="VarianceCategoryId" class="control-label"></label>
        <select asp-for="VarianceCategoryId" class="form-control" asp-items="ViewBag.VarianceCategoryId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="col-md-2">
        <label asp-for="StartDate" class="control-label"></label>
        <div class='input-group date'>

            @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="col-md-2">
        <label asp-for="EndDate" class="control-label"></label>
        <div class='input-group date'>
            @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>

    <div class="col-md-2 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
</form>
<hr />
<div class="scrollable">
    <p>@Model.ListDetails.TotalItemCount Mothers</p>
    <table class="table table-striped table-striped-header-only table-bordered">
        <thead>
            <tr>
                <th>Unique ID</th>
                <th>
                    Mother's Name
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.HealthFacilityId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Phone)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.WardId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommunityArea.Name)
                </th>
                @if (tasks.Contains("View PMT score"))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Household.PMTScore)
                    </th>

                    <th>
                        CV PMT Score
                    </th>
                    <th class="text-center">
                        Variance (%)
                    </th>

                }
                <th>
                    @Html.DisplayNameFor(model => model.Household.Notes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EnumeratorId)
                </th>
                <th>
                    Interview Result
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Detail.DateSubmitedByCHV)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Status)
                </th>
                <th>
                    Actioned By
                </th>
                @*<th>Capture</th>*@
                 <th>
                    Allowed To Enroll?
                </th>
                <th>
                    Reason
                </th>
                @if (tasks.Contains("Review Captured Data"))
                {
                    <th>View</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ListDetails)
            {
                <tr class="@Html.DisplayFor(modelItem => item.VarianceCategory.Code) @item.AllowedToEnroll">
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.UniqueId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.HealthFacility.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Phone)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Ward.SubCounty.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Ward.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.CommunityArea.Name)
                    </td>
                    @if (tasks.Contains("View PMT score"))
                    {
                        <td>
                            @*@Html.DisplayFor(modelItem => item.Household.PMTScore)*@

                            @item.Household.PMTScore
                        </td>

                        <td>
                            @*@Html.DisplayFor(modelItem => item.CVHouseHold.PMTScore)*@
                            @if (item.CVHouseHold != null)
                            {
                                <span>@item.CVHouseHold.PMTScore</span>
                            }
                        </td>

                        <td class="text-center">
                            @Html.DisplayFor(modelItem => item.Variance)
                        </td>

                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.AllowedReason)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Enumerator.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InterviewResult.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateSubmitedByCHV)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActionedBy.DisplayName)
                    </td>
                     <td>
                        @Html.DisplayFor(modelItem => item.AllowedToEnrollDisplay)
                    </td>
                     <td>
                        @Html.DisplayFor(modelItem => item.AllowedReason)
                    </td>
                    @*<td class="fit text-center">
                            @if ((item.StatusId == 1 || item.StatusId == 9) && Model.CVList.StatusId == 3)
                            {
                                <a asp-action="Dwelling" class="fa fa-pencil" asp-route-id="@item.Id"></a>
                            }
                        </td>*@
                    @if (tasks.Contains("Review Captured Data"))
                    {
                        <td class="fit text-center">
                            @if (item.StatusId != 1 && item.StatusId != 9)
                            {
                                <a asp-action="Captured" class="fa fa-eye" asp-route-id="@item.Id"></a>
                            }
                        </td>
                    }
                </tr>
            }
            @if (!Model.ListDetails.Any())
            {
                <tr>
                    <td colspan="9" class="dataTables_empty">No Data found</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-md-22">
        Page @(Model.ListDetails.PageCount < Model.ListDetails.PageNumber ? 0 : Model.ListDetails.PageNumber) of @Model.ListDetails.PageCount, Showing @(((Model.ListDetails.PageNumber-1)* Model.ListDetails.PageSize) + @Model.ListDetails.Count) of @Model.ListDetails.TotalItemCount
        @Html.PagedListPager(Model.ListDetails, page => Url.Action("Index", new { page }))
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                scope.SubCountyId ='@Model.SubCountyId';
                scope.WardId = '@Model.WardId';
            });
        });
    </script>
}