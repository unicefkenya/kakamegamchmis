@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.CaseManagementListViewModel

@{
    ViewData["Title"] = "Case Management";
}
@section buttons{
    <a asp-action="Search">Record New Pregnancy</a>
}
<form asp-action="Index" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group col-md-2 col-xs-3">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
    </div>
    <div class="form-group col-md-2 col-xs-3">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
    </div>
    <div class="form-group col-md-1 col-xs-3">
        <label asp-for="Phone" class="control-label"></label>
        <input asp-for="Phone" class="form-control" />
    </div>
    <div class="form-group col-md-1 col-xs-3">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group col-md-1 col-xs-3">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-1 col-xs-3">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-1 col-xs-3">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control" ng-model="WardId">
            <option>Select</option>

            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>
    <div class="col-md-2  col-xs-3 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
</form>
<div class="scrollable">
    <table class="table table-striped table-bordered ">
        <thead>
            <tr>
                <th>Unique ID</th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.HealthFacilityId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Phone)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.WardId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pregnancy.DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pregnancy.CreatedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pregnancy.EDD)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pregnancy.LastVisit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pregnancy.NextVisit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pregnancy.StatusId)
                </th>
                <th class="fit">View</th>
                <th class="fit">Update</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Pregnancies)
            {
                var cssClass = "";
                {
                    if (item.NextVisitDuration >= 0 && item.NextVisitDuration <= @Model.ReminderOffset)
                    {
                        cssClass = "text-warning";
                    }
                    else if (item.NextVisitDuration < 0)
                    {
                        cssClass = "text-danger";
                    }
                    else
                    {
                        cssClass = "ok";
                    }
                }
                <tr class="@cssClass">
                    <td>
                        @Html.DisplayFor(modelItem => item.CaseManagement.Household.UniqueId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CaseManagement.Household.Mother.FullName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CaseManagement.Household.HealthFacility.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CaseManagement.Household.Phone)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CaseManagement.Household.Village.Ward.SubCounty.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CaseManagement.Household.Village.Ward.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EDD)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastVisit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NextVisit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status.Name)
                    </td>
                    <td class="text-center">
                        <a asp-action="Details" class="fa fa-eye" asp-route-id="@item.Id"></a>
                    </td>
                    <td class="text-center">
                        <a asp-action="Update" class="fa fa-pencil" asp-route-id="@item.Id"></a>
                    </td>
                </tr>
            }
            @if (!Model.Pregnancies.Any())
            {
                <tr>
                    <td colspan="20" class="dataTables_empty">No data found.</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="13"><strong>Total</strong></td>
                <td><strong>@Model.Pregnancies.TotalItemCount.ToString("##,###")</strong></td>
            </tr>
        </tfoot>
    </table>
</div>

@Html.PagedListPager(Model.Pregnancies, page => Url.Action("Index", new { page }))