@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.HouseholdsListViewModel

@{
    ViewData["Title"] = "Registered Mothers";
    var tasks = User.FindFirst("UserRoles").Value;
}
@section buttons
    {
    @if (tasks.Contains("Register new mothers"))
    {
        <a class="btn btn-primary" asp-action="create">Register a  Mother</a>
    }
    @if (tasks.Contains("Run IPRS Check"))
    {
        <a class="btn btn-primary lnk-modal" asp-action="IPRS">Run IPRS Check</a>
    }
}

<form asp-action="Index" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group col-md-2">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
    </div>

    <div class="form-group col-md-2">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group col-md-1">
        <label asp-for="Phone" class="control-label"></label>
        <input asp-for="Phone" class="form-control" />
    </div>
    <div class="form-group col-md-1">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-1">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    @*<div class="form-group col-md-1">
            <label asp-for="WardId" class="control-label"></label>
            <select asp-for="WardId" class="form-control" ng-model="WardId">
                <option value="">Select</option>
                <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                    {{item.Name}}
                </option>
            </select>
        </div>*@
    <div class="form-group col-md-1">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="col-md-2 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter margin-right-10 inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
    <input asp-for="Option" type="hidden" />
</form>

<form asp-action="SendForApproval">
    <hr />
    @if (tasks.Contains("Run IPRS Check") && Model.AwaitingIPRS > 0)
    {
        <div class="alert alert-warning notification">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            @Model.AwaitingIPRS.ToString("##,##0") mother@(Model.AwaitingIPRS > 0 ? "s" : "") awaiting IPRS check
        </div>
    }
    <div class="scrollable">
        <p>@Model.HouseholdRegs.TotalItemCount.ToString("##,##0")  Mothers</p>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Unique ID</th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.Mother.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.Mother.MiddleName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.Mother.Surname)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.Mother.IdNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.HealthFacilityId)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Household.Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.EDD)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.DateCreated)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.Village.WardId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.Village.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Household.CommunityArea.Name)
                    </th>*@
                    <th>
                        @Html.DisplayName("Fingerprint Taken?")
                    </th>
                    @if (tasks.Contains("View IPRS"))
                    {
                        <th>
                            @Html.DisplayNameFor(model => model.Household.IPRSVerified)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Household.IPRSPassed)
                        </th>
                    }

                    <th>
                        @Html.DisplayNameFor(model => model.Household.Status)
                    </th>
                    @if (tasks.Contains("View PMT score"))
                    {
                        <th>
                            @Html.DisplayNameFor(model => model.Household.PMTScore)
                        </th>
                    }
                    @if (tasks.Contains("Register new mothers"))
                    {
                        <th>
                            Send for approval?
                        </th>

                        <th>Edit</th>
                    }
                    @if (tasks.Contains("Approve mothers details"))
                    {
                        <th>Approvals</th>
                    }
                    <th>View</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.HouseholdRegs)
                {
                <tr class="@item.Status.Name.Replace(" ", " -").ToLower() @(item.IPRSVerified ? "iprs-verified" : "iprs-not-verified") @(item.IPRSPassed == true ? "passed" : "failed") @(item.RequiresIPRSECheck ? "requires-iprs" : "does-not-require-iprs")">
                    <td>
                        @Html.DisplayFor(modelItem => item.UniqueId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mother.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mother.MiddleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mother.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mother.IdNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HealthFacility.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EDD)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    @*<td>
            @Html.DisplayFor(modelItem => item.Village.Ward.SubCounty.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Village.Ward.Name)
            @if (!string.IsNullOrEmpty(item.TempWard))
            {
                <span>@item.TempWard</span>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Village.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CommunityArea.Name)
        </td>*@
                    <td>
                        @(item.FingerPrint != null && item.FingerPrint.Length > 5 ? "Yes" : "No")
                    </td>
                    @if (tasks.Contains("View IPRS"))
                    {
                <td>
                    @if (item.RequiresIPRSECheck)
                    {@(item.IPRSVerified == true ? "Yes" : "No")}
                </td>
                                    <td>
                                        @if (item.IPRSPassed == true)
                                        {
                    <span>Yes</span>}
                                        @if (item.IPRSPassed == false)

                                        {
                    <span>No - @item.IPRSException?.Code</span>}
                                    </td>}
                    <td>
                        @Html.DisplayFor(modelItem => item.Status.Name)
                    </td>
                    @if (tasks.Contains("View PMT score"))
                    {
                <td>
                    @Html.DisplayFor(modelItem => item.PMTScore)


                    @if (item.PMTScoreFinal != null)
                    {
                        <br/>
                        @Html.DisplayFor(modelItem => item.PMTScoreFinal)
                    }
               
                </td>}
                    @if (tasks.Contains("Register new mothers"))
                    {
                <td class="text-center fit">
                    @if (item.StatusId == 2)
                    {
                <input type="checkbox" id="@item.Id" class="ben-checkbox" name="Ids[]" value="@item.Id" @(item.StatusId == 2 ? "checked" : "") />}
                </td>
                                    <td class="fit">
                                        @if (item.StatusId == 1 || item.StatusId == 5 || item.StatusId == 2 || item.StatusId == 20)
                                        {
                    <a asp-action="Create" class="fa fa-pencil" asp-route-id="@item.Id"></a>}
                                    </td>}
                    @if (tasks.Contains("Approve mothers details"))
                    {
                <td class="fit text-center">
                    @if (item.StatusId == 3)
                    {
                <a asp-action="Details" class="fa fa-eye" asp-route-id="@item.Id" asp-route-view="approve"></a>}
                </td>}
                    <td class="fit">
                        <a asp-action="Details" class="fa fa-eye" asp-route-id="@item.Id"></a>
                    </td>
                </tr>
                }
                @if (!Model.HouseholdRegs.Any())
                {
                    <tr>
                        <td class="dataTables_empty" colspan="21">
                            No data found.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="col-md-12 action-cont margin-top-10 ">
            <div class="text-danger text-right">
                <p>
                    <strong>Select the households to send for approval above. Unselect the ones not to be sent.</strong>
                </p>
            </div>

            <button type="submit" class="btn btn-success pull-right">
                <i class="glyphicon glyphicon-ok-sign"></i> Send for Approval
            </button>
        </div>
        @Html.PagedListPager(Model.HouseholdRegs, page => Url.Action("Index", new { page }))
    </div>
</form>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
               // scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                scope.SubCountyId ='@Model.SubCountyId';
                scope.WardId = '@Model.WardId';
                setTimeout(function() {
                    $('#WardId').val('@Model.WardId');
                },100);
            });
        });
    </script>
}