@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.PaymentTransactionsViewModel

@{
    ViewData["Title"] = "Details";
}
@section buttons
    {
    @if (Model.FundRequest.StatusId == 1)
    {
        <a class="btn btn-primary modal-link" asp-action="SendForApproval" asp-route-id="@Model.Id">
            <span><i class="glyphicon glyphicon-ok-sign"></i> Send for Approval</span>
        </a>
    }
    @if (Model.FundRequest.StatusId == 2)
    {
        <a class="btn btn-primary modal-link" asp-action="Action" asp-route-id="@Model.Id">
            <span><i class="glyphicon glyphicon-ok-sign"></i> Approvals</span>
        </a>
    }

}
<form asp-action="Details" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group col-md-2">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
    </div>

    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-1">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-1">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">Select</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>
    <div class="col-md-2 pull-right margin-bottom-10">
        <button type="submit" class="btn btn-success pull-left btn-filter inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
        <button type="submit" class="btn btn-success pull-left btn-export inline">
            <i class="fa fa-file-pdf-o"></i> Export
        </button>
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
    <input asp-for="Id" type="hidden" />
    <input asp-for="Option" type="hidden" />
</form>
<hr />
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.Beneficiary.UniqueId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.IdNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.BeneficiaryName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.RecipientName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.RecipientPhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.HealthFacilityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.SubCountyId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.Ward)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.Beneficiary.Village.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.PaymentPointId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.Amount)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Details)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Beneficiary.UniqueId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BeneficiaryName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.RecipientName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecipientPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HealthFacility.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubCounty.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Beneficiary.Village.Ward.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Beneficiary.Village.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentPoint.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="11">
                <strong>Total</strong>
            </td>
            <td>
                <strong>
                    @Html.DisplayFor(modelItem => Model.Total)
                </strong>
            </td>
        </tr>
    </tfoot>
</table>

<a asp-action="Index" class="btn btn-danger glyphicon glyphicon-step-backward pull-left"> Back</a>
@Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page }))

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                $('#SubCountyId').val('@Model.SubCountyId');
                $('.select-searchable,.filter-list').select2();
            });

            setTimeout(function() {
                $('#WardId').val('@Model.WardId');
                $('.select-searchable,.filter-list').select2();
            },100);
        });
    </script>
}