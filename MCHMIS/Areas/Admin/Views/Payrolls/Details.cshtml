@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.PaymentsViewModel

@{
    ViewData["Title"] = "Details";
}
@section buttons
    {
    @if (Model.Payroll.StatusId == 1)
    {
        <a class="btn btn-primary modal-link" asp-action="SendForApproval" asp-route-option="payment" asp-route-id="@Model.Id">
            <span><i class="glyphicon glyphicon-ok-sign"></i> Send for Approval</span>
        </a>
    }
    @if (Model.Payroll.ReconciliationStatusId == 1)
    {
        <a class="btn btn-primary modal-link" asp-action="SendForApproval" asp-route-option="reconciliation" asp-route-id="@Model.Id">
            <span><i class="glyphicon glyphicon-ok-sign"></i> Send Reconciliation for Approval</span>
        </a>
    }
    @if (Model.Payroll.ReconciliationStatusId == 2)
    {
        <a class="btn btn-primary modal-link" asp-action="Action" asp-route-option="reconciliation" asp-route-id="@Model.Id">
            <span><i class="glyphicon glyphicon-ok-sign"></i> Reconciliation Approvals</span>
        </a>
    }

    @if (Model.Payroll.StatusId == 2)
    {
        <a class="btn btn-primary modal-link" asp-action="Action" asp-route-option="payment" asp-route-id="@Model.Id">
            <span><i class="glyphicon glyphicon-ok-sign"></i> Approvals</span>
        </a>
    }
    else if (Model.Payroll.StatusId == 3)
    {
        @*if (!Model.Payroll.Reconciled)
            {
                <a class="btn btn-primary" asp-action="Reconcile" asp-route-id="@Model.Id">
                    <i class="fa fa-upload" aria-hidden="true"></i> Reconcile
                </a>
            }*@

        <a class="btn btn-primary" asp-action="Export" asp-route-id="@Model.Id">
            <i class="fa fa-file-excel-o" aria-hidden="true"></i> Download
        </a>

    }

}
<form asp-action="Details" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group col-md-2">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="PhoneNumber" class="control-label"></label>
        <input asp-for="PhoneNumber" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control filter-list" asp-items="ViewBag.StatusId">
            <option value="">Select</option>
        </select>
    </div>

    <div class="col-md-2">
        <button type="submit" class="btn btn-success pull-left btn-filter margin-right-10 inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>
    <div class="clearfix"></div>
    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
    </div>

    <div class="form-group col-md-2">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">Select</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>

    <hr />
    <hr />
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.Beneficiary.UniqueId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.IdNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.BeneficiaryName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Payment.RecipientName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.RecipientPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.HealthFacilityId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.SubCountyId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.Ward)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.Beneficiary.Village.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.Reconciled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment.StatusId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Payment.TransactionReceipt)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Payment.Amount)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details)
            {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Beneficiary.UniqueId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.IdNumber)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.BeneficiaryName)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.RecipientName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.RecipientPhone)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.HealthFacility.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Village.Ward.SubCounty.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Village.Ward.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Village.Name)
    </td>
    <td>
        @(item.Reconciled ? "Yes" : "No")
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Status.Name)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.TransactionReceipt)
        @if (item.StatusId.Equals(3))
        {
<span> - @Html.DisplayFor(modelItem => item.PaymentErrorMessage)</span>}
    </td>

    <td>
        @if (item.Amount > 2000)
        {
<a asp-action="Details" class="text-blue" asp-controller="FundRequests" asp-route-id="@item.FundRequestId" asp-route-UniqueId="@item.Beneficiary.UniqueId">
    @Html.DisplayFor(modelItem => item.Amount)
</a> }
else
{
@Html.DisplayFor(modelItem => item.Amount)}
    </td>
</tr>
}
        </tbody>
        @if (Model.Id != 3)
        {
<tfoot>
    <tr>
        <td colspan="12">
            <strong>Total</strong>
        </td>
        <td>
            <strong>
                @Html.DisplayFor(modelItem => Model.Total)
            </strong>
        </td>
    </tr>
</tfoot>
}
    </table>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
    <input asp-for="Id" type="hidden" />

    <div class="row">
        <div class="col-md-12">
            @Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page = page }))
            Page @(Model.Details.PageCount < Model.Details.PageNumber ? 0 : Model.Details.PageNumber) of @Model.Details.PageCount, Showing @(((Model.Details.PageNumber-1)* Model.Details.PageSize) + @Model.Details.Count) of @Model.Details.TotalItemCount
        </div>
    </div> 
    <a asp-action="Index" class="btn btn-danger glyphicon glyphicon-step-backward pull-left"> Back</a>
</form>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                $('#SubCountyId').val('@Model.SubCountyId');
                $('.select-searchable,.filter-list').select2();
            });

            setTimeout(function() {
                $('#WardId').val('@Model.WardId');
                $('.select-searchable,.filter-list').select2();
            },100);
        });
    </script>
}