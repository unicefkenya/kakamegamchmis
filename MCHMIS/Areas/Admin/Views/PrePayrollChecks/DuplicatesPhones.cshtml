@using X.PagedList.Mvc.Core
@model MCHMIS.ViewModels.PrePayrollFilterViewModel
<style>
    .ajax-loader {
        display: block
    }
</style>
@{
    ViewBag.Title = "Duplicate Names";
    int showBatchApproval = 0;

}
@Html.Partial("_Menu")
<p>&nbsp;</p>
<form asp-action="DuplicatesPhones">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input asp-for="Id" type="hidden" />
    <div class="form-group col-md-2">
        <label asp-for="UniqueId" class="control-label"></label>
        <input asp-for="UniqueId" class="form-control" />
    </div>
    <div class="form-group col-md-2">
        <label asp-for="IdNumber" class="control-label"></label>
        <input asp-for="IdNumber" class="form-control" />
    </div>

    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">Select</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">Select</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>

    <div class="col-md-2 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter inline">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
    </div>

</form>
<hr />
@using (Html.BeginForm("BatchAction", "PrePayrollChecks", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-vertical filter form-action", role = "form" }))

{
    @Html.Hidden("ExceptionId", 1)
    @Html.Hidden("Id", ((int)ViewBag.PrePayrollCheckId))
    @Html.HiddenFor(m => m.HealthFacilityId)
    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.RecipientPhone)
                        </th>
                        <th>Unique ID</th>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.BeneficiaryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.RecipientName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.IdNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.HealthFacilityId)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.Village.Ward.SubCountyId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.Village.Ward)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Beneficiary.Village.Name)
                        </th>
                        <th>Action Taken</th>
                        <th>Date Actioned</th>
                        <th>Actioned By</th>
                        <th>Notes</th>
                        <th>Action</th>
                        <th width="50">
                            <input type="checkbox" name="ApproveAll" value="True" id="check-all" />
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Details)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.RecipientPhone)
                            </td>
                            <td> @Html.DisplayFor(model => item.Beneficiary.UniqueId)</td>

                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.BeneficiaryName)
                            </td>

                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.RecipientName)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.IdNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.HealthFacility.Name)
                            </td>

                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.Village.Ward.SubCounty.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.Village.Ward.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Beneficiary.Village.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Action.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.DateApproved)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.ApprovedBy.DisplayName)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Notes)
                            </td>
                            <td>
                                @if (item.ActionId == null)
                                {
                                    <a asp-action="Action" class="fa fa-pencil lnk-modal" asp-route-id="@item.Id"></a>
                                    showBatchApproval++;
                                }
                            </td>
                            <td>
                                @if (item.ActionId == null)
                                {
                                    <input type="checkbox" name="Ids[]" value="@item.Id" />
                                }
                            </td>
                        </tr>
                    }
                    @if (!Model.Details.Any())
                    {
                        <tr>
                            <td colspan="20" class="no-data-found">No Data Found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    if (showBatchApproval != 0 && Model.StatusId == 1)
    {
        <div class="col-md-12 action-cont">
            <hr />
            <div class="pull-right">
                <input type="submit" value="Save" class="btn btn-action-with-notes pull-left btn-inline btn-primary" />
            </div>
            <div class="col-md-3 pull-right">
                <label class="control-label">Notes</label>
                <span class="field-validation-valid notes-error text-danger">*Notes are required.</span>
                @Html.TextBox("Notes", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-3 pull-right">
                <label class="control-label">With Selected</label>
                <span class="field-validation-valid action-error text-danger">*Select an Action.</span>
                @Html.DropDownList("ActionId", null, "Select", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

    }
}

@using (Html.BeginForm("DuplicatesPhones", "PrePayrollChecks", FormMethod.Post, new { @class = "form-vertical filter form-paginated", role = "form" }))

{
    @Html.Hidden("ExceptionId", 1)
    @Html.Hidden("Id", ((int)ViewBag.PrePayrollCheckId))
    <input type="hidden" name="Page" id="pagination-page" value="1" />
    <a asp-action="Index" class="btn btn-danger glyphicon margin-top-20 glyphicon-step-backward pull-left"> Back</a>
  @Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page }))
}
@section scripts
    {

    <script>
        $(document).ready(function () {
            $('.action-button').on("click",
                function () {
                    var action = $(this).attr('rel');
                    $('.export-form').attr('action', action);
                });
            $('body').on("click",
                ".btn-action-with-notes",
                function () {
                    var valid = true;
                    if ($('#Notes').val() === '') {
                        $('.notes-error').fadeIn();
                        valid = false;
                    } else {
                        $('.notes-error').fadeOut();
                    }
                    if ($('#ActionId').val() === '') {
                        $('.action-error').fadeIn();
                        valid = false;
                    } else {
                        $('.action-error').fadeOut();
                    }
                    var checked = $(".form-action input:checked").length > 0;
                    if (!checked) {
                        alert('No Beneficiaries Selected.');
                        valid = false;
                    }

                    if (!valid) {
                        return false;
                    }

                });
        });
    </script>
}