@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.Areas.Reports.ViewModels.PaymentsViewModel

<form class="form-paginated" asp-action="Disbursements">

    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="ReportTypeId" class="control-label"></label>
        <select asp-for="ReportTypeId" class="form-control" asp-items="ViewBag.ReportTypeId"></select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="PayrollId" class="control-label"></label>
        <select asp-for="PayrollId" class="form-control" asp-items="ViewBag.PayrollId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="PaymentStageId" class="control-label"></label>
        <select asp-for="PaymentStageId" class="form-control" asp-items="ViewBag.PaymentStageId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">All</option>
        </select>
    </div>
    @*<div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control" ng-model="WardId"
                ng-options="item.Name for item in wards| filter: {SubCountyId: SubCountyId||'-1'} track by item.Id">
            <option value="">All</option>
        </select>
    </div>*@
    <div class="col-md-2">
        <button type="submit" class="btn btn-success pull-left btn-filter inline btn-filter-report">
            <i class="glyphicon glyphicon-search"></i> Filter
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>

        <button type="submit" class="btn btn-success pull-left btn-export inline">
            <i class="fa fa-file-pdf-o"></i> Export
        </button>
        <input asp-for="Option" type="hidden" />
        <input type="hidden" name="Page" id="pagination-page" value="1" />
    </div>
</form>
<hr />
@if (Model.DisbursementDetails != null)
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.Beneficiary.UniqueId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.IdNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.BeneficiaryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.RecipientName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.RecipientPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.HealthFacilityId)
                </th>
            
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.PaymentPointId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentTransaction.Amount)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.DisbursementDetails)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UniqueId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BeneficiaryName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.RecipientName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RecipientPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HealthFacility)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentPoint)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                </tr>
            }
            @if (!Model.DisbursementDetails.Any())
            {
                <tr>
                    <td colspan="15" class="dataTables_empty">No data found.</td>
                </tr>
            }
        </tbody>
        @if (Model.DisbursementDetails.Any())
        {
            <tfoot>
                <tr>
                    <td colspan="8">
                        <strong>Total</strong>
                    </td>
                    <td>
                       <strong>@Html.DisplayFor(modelItem => modelItem.Total)</strong>
                    </td>
                </tr>
            </tfoot>
        }
    </table>
    @Html.PagedListPager(Model.DisbursementDetails, page => Url.Action("Index", new { page }))
}