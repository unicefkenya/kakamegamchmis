@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.Areas.Reports.ViewModels.ChangesReportListViewModel

<form asp-action="Index" class="form-paginated">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="ReportTypeId" class="control-label"></label>
        <select asp-for="ReportTypeId" class="form-control" asp-items="ViewBag.ReportTypeId"></select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="ChangeTypeId" class="control-label"></label>
        <select asp-for="ChangeTypeId" class="form-control" asp-items="ViewBag.ChangeTypeId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">All</option>
        </select>
    </div>
    @*<div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">All</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>*@
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">All</option>
        </select>
    </div>
    <div class="col-md-2 pull-left">
        <button type="submit" class="btn btn-success pull-left btn-filter inline btn-filter-report">
            <i class="glyphicon glyphicon-search"></i> Search
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>

        <input asp-for="Option" type="hidden" />
    </div>
    <input type="hidden" name="Page" id="pagination-page" value="1" />
    <button type="submit" class="btn btn-success pull-left btn-export inline">
        <i class="fa fa-file-pdf-o"></i> Export
    </button>
</form>
<hr />
@if (Model.Changes != null)
{
    <div class="scrollable">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Change.ChangeTypeId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Household.UniqueId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Household.Mother.FullName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.NotificationDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Notes)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.DateCreated)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.CreatedBy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.DateActioned)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.ActionedById)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.ApprovalNotes)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Change.Household.HealthFacility)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Household.Village.Ward.SubCountyId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Household.Village.Ward)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Household.Village)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Change.Status)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Changes)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ChangeType.Code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Household.UniqueId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Household.Mother.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NotificationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Notes)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.DateCreated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedBy.DisplayName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateActioned)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActionedBy.DisplayName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ApprovalNotes)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Household.HealthFacility.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Household.Village.Ward.SubCounty.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Household.Village.Ward.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Household.Village.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                    </tr>
                }
                @if (!Model.Changes.Any())
                {
                    <tr>
                        <td colspan="15" class="dataTables_empty">
                            No data found.
                        </td>
                    </tr>
                }
            </tbody>
            @if (Model.Changes.Any())
            {
                <tfoot>
                    <tr>
                        <td colspan="14">
                            <strong>Total</strong>
                        </td>
                        <td>
                            <strong>
                                @Html.DisplayFor(modelItem => Model.Total)
                            </strong>
                        </td>
                    </tr>
                </tfoot>
            }
        </table>
    </div>
    @Html.PagedListPager(Model.Changes, page => Url.Action("Index", new { page }))
}


@section scripts{
    <partial name="_Scripts" />
}