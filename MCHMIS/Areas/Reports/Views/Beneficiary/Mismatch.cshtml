@model MCHMIS.Areas.Reports.ViewModels.MismatchReportViewModel
@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
<form asp-action="MisMatch" class="form-paginated">
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="ReportTypeId" class="control-label"></label>
        <select asp-for="ReportTypeId" class="form-control" asp-items="ViewBag.ReportTypeId"> </select>
    </div>
   @* <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">All</option>
        </select>
    </div>*@
    @* <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control" ng-model="WardId">
            <option value="">All</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>*@
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control" ng-model="HealthFacilityID" asp-items="ViewBag.HealthFacilityId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-3 col-xs-6">
        <div class="row">
            <div class="col-md-6">
                <label asp-for="StartDate" class="control-label"></label>
                <div class='input-group date'>
                    <input asp-for="StartDate" type="text" class="form-control no-typing reg-date" autocomplete="off" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class="col-md-6">
                <label asp-for="EndDate" class="control-label"></label>
                <div class='input-group date'>
                    <input asp-for="EndDate" type="text" class="form-control no-typing reg-date" autocomplete="off" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-2">
        <button type="submit" class="btn btn-success pull-left btn-filter inline  btn-filter-report">
            <i class="glyphicon glyphicon-search"></i> Filter
        </button>

        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>

        <input asp-for="Option" type="hidden" />
        <input type="hidden" name="Page" id="pagination-page" value="1" />
    </div>
    <button type="submit" class="btn btn-success pull-left btn-export inline">
        <i class="fa fa-file-pdf-o"></i> Export
    </button>
</form>
<hr />
@if (Model.Details != null)
{
    <table class="table table-striped table-bordered">
        <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.EnrolmentDetail.Household.UniqueId)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EnrolmentDetail.RecipientPhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrolmentDetail.RecipientNames)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrolmentDetail.CustomerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrolmentDetail.CustomerType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Household.Village.WardId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Household.Village.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrolmentDetail.Status)
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Details)
        {
            <tr class="@Html.DisplayFor(modelItem => item.Status.Name)">

                <td>
                    @Html.DisplayFor(modelItem => item.Household.UniqueId)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.RecipientPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecipientNames)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Household.Village.Ward.SubCounty.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Household.Village.Ward.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Household.Village.Name)
                </td>

                <td class="text-center fit">
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
            </tr>
        }
        <tr>
            <td colspan="8"><strong>Total</strong></td>
            <td class="text-center">
                <strong>@Html.DisplayFor(modelItem => modelItem.Total)</strong>
            </td>
        </tr>
        </tbody>
    </table>
    @Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page }))
}