@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.Areas.Reports.ViewModels.PaymentTransactionsViewModel

@section buttons{
    <a asp-action="ExportStatement" asp-route-id="@ViewBag.Id">
        <i class="fa fa-file-pdf-o"></i> Export
    </a>
}
<partial name="_Menu" />
<table class="table table-striped table-bordered">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.RecipientName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.RecipientPhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.HealthFacilityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.PaymentPointId)
            </th>
            <th>
                Payment Cycle
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentTransaction.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Details)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.RecipientName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecipientPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HealthFacility.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.PaymentPoint.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FundRequest.Cycle.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
            </tr>
        }
        @if (!Model.Details.Any())
        {
            <tr>
                <td colspan="10" class="dataTables_empty">
                    No data found.
                </td>
            </tr>
        }
    </tbody>
</table>
<input type="hidden" name="Page" id="pagination-page" value="1" />
<input asp-for="Id" type="hidden" />

<a asp-action="Index" class="btn btn-danger glyphicon glyphicon-step-backward pull-left"> Back</a>
@Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page }))