@using Newtonsoft.Json
@using X.PagedList.Mvc.Core
@model MCHMIS.Areas.Reports.ViewModels.VarianceReportViewModel
@{

    var tasks = User.FindFirst("UserRoles").Value;
}

<form asp-action="Variance" class="form-paginated">

    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="ReportTypeId" class="control-label"></label>
        <select asp-for="ReportTypeId" class="form-control" asp-items="ViewBag.ReportTypeId"></select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="VarianceCategoryId" class="control-label"></label>
        <select asp-for="VarianceCategoryId" class="form-control" asp-items="ViewBag.VarianceCategoryId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2 col-xs-3 ">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">All</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-success pull-left btn-filter inline btn-filter-report">
            <i class="glyphicon glyphicon-search"></i> Filter
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
        <button type="submit" class="btn btn-success pull-left btn-export inline">
            <i class="fa fa-file-pdf-o"></i> Export
        </button>
        <input asp-for="Option" type="hidden" />
        <input type="hidden" name="Page" id="pagination-page" value="1" />
    </div>
</form>
<hr />
@if (Model.Details != null)
{
    <table class="table table-striped table-striped-header-only table-bordered">
        <thead>
            <tr>
                <th>Unique ID</th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.MiddleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommonName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.IdNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.HealthFacilityId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.EDD)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.WardId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommunityArea.Name)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.PMTScore)
                </th>
                <th>
                    CV PMT Score
                </th>
                <th>
                    Variance
                </th>
                <th>
                    Variance Category
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details)
            {
                <tr class="@Html.DisplayFor(modelItem => item.VarianceCategory.Code)">
                    <td> @Html.DisplayFor(modelItem => item.Household.UniqueId)</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.MiddleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.CommonName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.IdNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.HealthFacility.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.EDD)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Ward.SubCounty.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Ward.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.CommunityArea.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Household.PMTScore)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CVHouseHold.PMTScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Variance)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VarianceCategory.Code)
                    </td>
                </tr>
            }

            @if (!Model.Details.Any())
            {
                <tr>
                    <td colspan="9" class="dataTables_empty">No Data found</td>
                </tr>
            }
        </tbody>
        @if (Model.Details.Any())
        {
            <tfoot>
                <tr>
                    <td colspan="16"><strong>Total</strong></td>
                    <td><strong>@Model.Total.ToString("##,###")</strong> </td>
                </tr>
            </tfoot>

        }
    </table>
    @Html.PagedListPager(Model.Details, page => Url.Action("Index", new { page }))

}

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                scope.SubCountyId ='@Model.SubCountyId';
                scope.WardId = '@Model.WardId';
            });
        });
    </script>
}