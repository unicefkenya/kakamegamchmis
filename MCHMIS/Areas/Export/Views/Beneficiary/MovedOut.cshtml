@using Newtonsoft.Json

@model MCHMIS.Areas.Reports.ViewModels.CommunityValidationListViewModel
@{
    var tasks = User.FindFirst("UserRoles").Value;
}
<form asp-action="MovedOut" class="form-paginated">

    <div class="form-group col-md-2">
        <label asp-for="ReportTypeId" class="control-label"></label>
        <select asp-for="ReportTypeId" class="form-control required" asp-items="ViewBag.ReportTypeId"></select>
    </div>

    <div class="form-group col-md-2">
        <label asp-for="HealthFacilityId" class="control-label"></label>
        <select asp-for="HealthFacilityId" class="form-control filter-list" asp-items="ViewBag.HealthFacilityId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="SubCountyId" class="control-label"></label>
        <select asp-for="SubCountyId" class="form-control filter-list" ng-model="SubCountyId" asp-items="ViewBag.SubCountyId">
            <option value="">All</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="WardId" class="control-label"></label>
        <select asp-for="WardId" class="form-control filter-list" ng-model="WardId">
            <option value="">All</option>
            <option ng-repeat="item in wards | filter: {SubCountyId: SubCountyId}" value="{{item.Id}}">
                {{item.Name}}
            </option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label asp-for="StatusId" class="control-label"></label>
        <select asp-for="StatusId" class="form-control required" asp-items="ViewBag.StatusId">
            <option value="">All</option>
        </select>
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-success pull-left btn-filter inline btn-filter-report">
            <i class="glyphicon glyphicon-search"></i> Filter
        </button>
        <button type="button" class="btn btn-default btn-reset pull-left btn-filter inline">
            <i class="fa fa-eraser"></i> Clear
        </button>
        <button type="submit" class="btn btn-success pull-left btn-export inline">
            <i class="fa fa-file-pdf-o"></i> Export
        </button>
        <input type="hidden" name="Page" id="pagination-page" value="1" />
        <input asp-for="Option" type="hidden" value="filter" />
    </div>
</form>

<hr />
@if (Model.Details != null)
{

    <table class="table table-striped table-striped-header-only table-bordered">
        <thead>
            <tr>
                <th>Unique ID</th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.MiddleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommonName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Mother.IdNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.HealthFacilityId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Household.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.EDD)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Ward.SubCountyId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.WardId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.Village.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Household.CommunityArea.Name)
                </th>
                @if (tasks.Contains("View PMT score"))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Household.PMTScore)
                    </th>
                    <th>
                        CV PMT Score
                    </th>
                    <th>
                        Variance
                    </th>
                }
                <th>
                    @Html.DisplayNameFor(model => model.Household.Notes)
                </th>
                <th>
                    CHV
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StatusId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Details)
            {
                <tr>
                    <td> @Html.DisplayFor(modelItem => item.Household.UniqueId)</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.MiddleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.CommonName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Mother.IdNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.HealthFacility.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.EDD)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Ward.SubCounty.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Ward.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Village.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.CommunityArea.Name)
                    </td>
                    @if (tasks.Contains("View PMT score"))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.Household.PMTScore)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.CVHouseHold.PMTScore)
                        </td>
                        <td>
                            @*@if (item.Household != null && item.CVHouseHold?.PMTScore != null)
                                {
                                    float? variance = ((item.Household.PMTScore - item.CVHouseHold.PMTScore) / item.Household.PMTScore) * 100;
                                    <span>
                                        @if (variance != null)
                                        {
                                            @(Math.Abs((float)variance).ToString("0.00"))

                                        }%
                                    </span>
                                }*@
                            @Html.DisplayFor(modelItem => item.Variance)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Household.Notes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Enumerator.FullName)
                    </td>
                    <td>
                        @if (item.ApprovalStatus == null)
                        {
                            <span>Pending</span>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.ApprovalStatus.Name)
                        }
                    </td>
                </tr>
            }
            @if (!Model.Details.Any())
            {
                <tr>
                    <td colspan="20" class="dataTables_empty">No Data found</td>
                </tr>
            }
            <tr>
                <td colspan="18">
                    <strong>Total</strong>
                </td>
                <td>
                   <strong>@Html.DisplayFor(modelItem => modelItem.Total)</strong>
                </td>
            </tr>
        </tbody>
    </table>

}

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var scope = angular.element(document.querySelector('body')).scope();
            scope.$apply(function (filter) {
                scope.wards = @Html.Raw(JsonConvert.SerializeObject(Model.Wards));
                scope.SubCountyId ='@Model.SubCountyId';
                scope.WardId = '@Model.WardId';
                scope.HealthFacilityID = '@Model.HealthFacilityId';
                setTimeout(function() {
                    $('#WardId').val('@Model.WardId');
                },100);
            });
        });
    </script>
}